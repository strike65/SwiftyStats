{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"interquantileRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lowerQuantile"},{"kind":"text","text":" "},{"kind":"internalParam","text":"lower"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upperQuantile"},{"kind":"text","text":" "},{"kind":"internalParam","text":"upper"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":"?"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lower","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lower quantile"}]}]},{"name":"upper","content":[{"inlineContent":[{"type":"text","text":"Upper quantile"}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"SSSwiftyStatsError.invalidArgument if upper.isZero || upper < 0.0 || upper >= 1.0 || lower.isZero || lower < 0.0 || lower >= 1.0 || upper < lower","type":"text"}]}],"type":"aside"}],"kind":"content"}],"metadata":{"modules":[{"name":"SwiftyStats"}],"roleHeading":"Instance Method","role":"symbol","conformance":{"constraints":[{"code":"SSElement","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":", "},{"code":"SSElement","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"SSElement","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"SSElement","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"code":"FPT","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"FPT","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"FPT","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"SSFloatingPoint","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"method","externalID":"s:11SwiftyStats9SSExamineC18interquantileRange13lowerQuantile05upperG0q_Sgq__q_tKF","extendedModule":"SwiftyStats","title":"interquantileRange(lowerQuantile:upperQuantile:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"interquantileRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lowerQuantile"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upperQuantile"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":"?"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftystats\/ssexamine\/interquantilerange(lowerquantile:upperquantile:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftyStats\/documentation\/SwiftyStats","doc:\/\/SwiftyStats\/documentation\/SwiftyStats\/SSExamine"]]},"abstract":[{"type":"text","text":"Returns the interquartile range between two quantiles"}],"identifier":{"url":"doc:\/\/SwiftyStats\/documentation\/SwiftyStats\/SSExamine\/interquantileRange(lowerQuantile:upperQuantile:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://SwiftyStats/documentation/SwiftyStats":{"kind":"symbol","type":"topic","title":"SwiftyStats","identifier":"doc:\/\/SwiftyStats\/documentation\/SwiftyStats","abstract":[{"type":"text","text":"SwiftyStats is a Swift library providing commonly used statistical procedures, probability distributions, and hypothesis tests. It favors clear APIs, strong generics, and crossâ€‘platform compatibility."}],"url":"\/documentation\/swiftystats","role":"collection"},"doc://SwiftyStats/documentation/SwiftyStats/SSExamine/interquantileRange(lowerQuantile:upperQuantile:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interquantileRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"lowerQuantile","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FPT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"upperQuantile","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FPT","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"FPT","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"SSElement"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"SSElement"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"SSElement"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"SSElement"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"type":"codeVoice","code":"FPT"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"FPT"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"FPT"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SSFloatingPoint"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"Returns the interquartile range between two quantiles"}],"title":"interquantileRange(lowerQuantile:upperQuantile:)","identifier":"doc:\/\/SwiftyStats\/documentation\/SwiftyStats\/SSExamine\/interquantileRange(lowerQuantile:upperQuantile:)","role":"symbol","url":"\/documentation\/swiftystats\/ssexamine\/interquantilerange(lowerquantile:upperquantile:)","type":"topic"},"doc://SwiftyStats/documentation/SwiftyStats/SSExamine":{"identifier":"doc:\/\/SwiftyStats\/documentation\/SwiftyStats\/SSExamine","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SSExamine","kind":"identifier"}],"kind":"symbol","title":"SSExamine","type":"topic","url":"\/documentation\/swiftystats\/ssexamine","role":"symbol","abstract":[{"type":"text","text":"SSExamine"},{"type":"text","text":" "},{"type":"text","text":"Holds the data to be analyzed. "},{"code":"SSExamine","type":"codeVoice"},{"type":"text","text":" expects elements that conform to the "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" protocols."},{"type":"text","text":" "},{"type":"text","text":"Which statistics are available depends on the element type. For nominal data, for example, a mean is not meaningful and is therefore not calculated."},{"type":"text","text":" "},{"type":"text","text":"If a particular statistic is not available, the result is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". Ensure you check results for "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" where appropriate."}],"navigatorTitle":[{"text":"SSExamine","kind":"identifier"}]}}}