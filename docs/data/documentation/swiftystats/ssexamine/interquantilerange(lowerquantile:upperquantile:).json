{"sections":[],"metadata":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"SSElement"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"SSElement"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"SSElement"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"SSElement"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FPT","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FPT","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"FPT","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"SSFloatingPoint","type":"codeVoice"},{"text":".","type":"text"}]},"symbolKind":"method","extendedModule":"SwiftyStats","role":"symbol","title":"interquantileRange(lowerQuantile:upperQuantile:)","externalID":"s:11SwiftyStats9SSExamineC18interquantileRange13lowerQuantile05upperG0q_Sgq__q_tKF","roleHeading":"Instance Method","modules":[{"name":"SwiftyStats"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interquantileRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"lowerQuantile","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FPT","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"upperQuantile","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FPT","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"FPT","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftyStats\/documentation\/SwiftyStats\/SSExamine\/interquantileRange(lowerQuantile:upperQuantile:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","variants":[{"paths":["\/documentation\/swiftystats\/ssexamine\/interquantilerange(lowerquantile:upperquantile:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns the interquartile range between two quantiles"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"interquantileRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lowerQuantile"},{"kind":"text","text":" "},{"kind":"internalParam","text":"lower"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upperQuantile"},{"kind":"text","text":" "},{"kind":"internalParam","text":"upper"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"lower","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lower quantile"}]}]},{"name":"upper","content":[{"inlineContent":[{"type":"text","text":"Upper quantile"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SSSwiftyStatsError.invalidArgument if upper.isZero || upper < 0.0 || upper >= 1.0 || lower.isZero || lower < 0.0 || lower >= 1.0 || upper < lower"}]}]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftyStats\/documentation\/SwiftyStats","doc:\/\/SwiftyStats\/documentation\/SwiftyStats\/SSExamine"]]},"references":{"doc://SwiftyStats/documentation/SwiftyStats/SSExamine/interquantileRange(lowerQuantile:upperQuantile:)":{"kind":"symbol","identifier":"doc:\/\/SwiftyStats\/documentation\/SwiftyStats\/SSExamine\/interquantileRange(lowerQuantile:upperQuantile:)","conformance":{"constraints":[{"code":"SSElement","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"SSElement","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"SSElement","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"SSElement","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FPT","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FPT","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"FPT","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"SSFloatingPoint","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"Returns the interquartile range between two quantiles","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"interquantileRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lowerQuantile"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upperQuantile"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"FPT"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swiftystats\/ssexamine\/interquantilerange(lowerquantile:upperquantile:)","title":"interquantileRange(lowerQuantile:upperQuantile:)"},"doc://SwiftyStats/documentation/SwiftyStats/SSExamine":{"identifier":"doc:\/\/SwiftyStats\/documentation\/SwiftyStats\/SSExamine","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SSExamine"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"SSExamine"},{"type":"text","text":" "},{"type":"text","text":"Holds the data to be analyzed. "},{"type":"codeVoice","code":"SSExamine"},{"type":"text","text":" expects elements that conform to the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" protocols."},{"type":"text","text":" "},{"type":"text","text":"Which statistics are available depends on the element type. For nominal data, for example, a mean is not meaningful and is therefore not calculated."},{"type":"text","text":" "},{"type":"text","text":"If a particular statistic is not available, the result is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". Ensure you check results for "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" where appropriate."}],"url":"\/documentation\/swiftystats\/ssexamine","navigatorTitle":[{"kind":"identifier","text":"SSExamine"}],"title":"SSExamine"},"doc://SwiftyStats/documentation/SwiftyStats":{"title":"SwiftyStats","identifier":"doc:\/\/SwiftyStats\/documentation\/SwiftyStats","kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/swiftystats","abstract":[{"text":"SwiftyStats is a Swift library providing commonly used statistical procedures, probability distributions, and hypothesis tests. It favors clear APIs, strong generics, and crossâ€‘platform compatibility.","type":"text"}]}}}